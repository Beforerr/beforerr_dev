[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "beforerr",
    "section": "",
    "text": "Python utils for different packages. Mainly developed by nbdev.",
    "crumbs": [
      "beforerr"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "beforerr",
    "section": "Install",
    "text": "Install\npip install beforerr",
    "crumbs": [
      "beforerr"
    ]
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "beforerr",
    "section": "How to use",
    "text": "How to use\nFill me in please! Donâ€™t forget code examples:\n\n1+1\n\n2",
    "crumbs": [
      "beforerr"
    ]
  },
  {
    "objectID": "02_r.html",
    "href": "02_r.html",
    "title": "R utils",
    "section": "",
    "text": "Utils for using R with python in Jupyter\nYou need to install depending package with pip install rpy2 rpy2-arrow\nSee rpy2 for more details and rp2-arrow for arrow support.\nTODO: support polars LazyFrame.\n\n\npy2rpy_polars\n\n py2rpy_polars ()\n\nHelper functions to convert between polars and R dataframes\nHere is how you can use it, remember to load the extension first:\n%load_ext rpy2.ipython\nfrom ids_finder.utils.r import py2rpy_polars\nconv_pl = py2rpy_polars()\nThen you can use it like this to export a dataframe df to R:\n%R -i df -c conv_pl",
    "crumbs": [
      "`R` utils"
    ]
  },
  {
    "objectID": "03_matplotlib.html",
    "href": "03_matplotlib.html",
    "title": "Utils for Matplotlib",
    "section": "",
    "text": "unify_axes_fontsize\n\n unify_axes_fontsize (axes:matplotlib.axes._axes.Axes,\n                      fontsize:str|float='medium')\n\nSet the fontsize of all text elements in a matplotlib axis to the same value.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\naxes\nAxes\n\na single axis or a list of axes\n\n\nfontsize\nstr | float\nmedium\nstring values denote sizes relative to the default font size",
    "crumbs": [
      "Utils for Matplotlib"
    ]
  },
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "core",
    "section": "",
    "text": "foo\n\n foo ()",
    "crumbs": [
      "core"
    ]
  },
  {
    "objectID": "10_polars.html#io",
    "href": "10_polars.html#io",
    "title": "Utils for Polars",
    "section": "IO",
    "text": "IO\n\n\nconvert_to_pd_dataframe\n\n convert_to_pd_dataframe\n                          (df:polars.dataframe.frame.DataFrame|polars.lazy\n                          frame.frame.LazyFrame)\n\nConvert a Polars DataFrame or LazyFrame into a pandas-like DataFrame.\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ndf\npolars.dataframe.frame.DataFrame | polars.lazyframe.frame.LazyFrame\noriginal DataFrame or LazyFrame",
    "crumbs": [
      "Utils for Polars"
    ]
  },
  {
    "objectID": "10_polars.html#functions",
    "href": "10_polars.html#functions",
    "title": "Utils for Polars",
    "section": "Functions",
    "text": "Functions\n\n\nsort\n\n sort (df:polars.dataframe.frame.DataFrame, col='time')\n\n\n\n\npl_norm\n\n pl_norm (columns, *more_columns)\n\n*Computes the square root of the sum of squares for the given columns.\nArgs: *columns (str): Names of the columns.\nReturns: pl.Expr: Expression representing the square root of the sum of squares.*\n\n\n\ndecompose_vector\n\n decompose_vector (df:polars.lazyframe.frame.LazyFrame, vector_col,\n                   name=None)",
    "crumbs": [
      "Utils for Polars"
    ]
  },
  {
    "objectID": "01_basics.html",
    "href": "01_basics.html",
    "title": "Basic functionality",
    "section": "",
    "text": "pmap\n\n pmap (func, *args, **kwargs)\n\nmap with partial",
    "crumbs": [
      "Basic functionality"
    ]
  }
]